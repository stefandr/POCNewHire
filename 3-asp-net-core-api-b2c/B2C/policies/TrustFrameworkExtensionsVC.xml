<TrustFrameworkPolicy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" PolicySchemaVersion="0.3.0.0" 
                      TenantId="yourtenant.onmicrosoft.com" 
                      PolicyId="B2C_1A_VC_TrustFrameworkExtensions" 
                      PublicPolicyUri="http://yourtenant.onmicrosoft.com/B2C_1A_VC_TrustFrameworkExtensions" 
                      >

  <!-- This policy file inherits from an already deployed version of trustFrameworkExtensions in the Starter Pack -->
  <BasePolicy>
    <TenantId>yourtenant.onmicrosoft.com</TenantId>
    <PolicyId>B2C_1A_TrustFrameworkExtensions</PolicyId>
  </BasePolicy>
  
  <BuildingBlocks>

    <!-- 
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Claims Schema 
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <ClaimsSchema>
      <!-- VCServiceUrl - we send the url for the deployed app in this claim -->
      <ClaimType Id="VCServiceUrl">
        <DisplayName>VCServiceUrl</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>VC Service Url</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <!-- State Id between backend and Authenticator app. We use it to pull the auth result-->
      <ClaimType Id="VCStateId">
        <DisplayName>VCStateId</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Verified ID State Id</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <!-- if the policy requires FaceCheck -->
      <ClaimType Id="VCFaceCheck">
        <DisplayName>VCFaceCheck</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>If required to use FaceCheck</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <!-- Claims that we get from the VC Verifier -->
      <ClaimType Id="VCCredentialType">
        <DisplayName>VCCredentialType</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Verifiable Credentials Credential Type</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <!-- DID of the Wallet -->
      <ClaimType Id="VCSubject">
        <DisplayName>VCSubject</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Verifiable Credentials sub</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <!-- DID of the issuer -->
      <ClaimType Id="VCIssuer">
        <DisplayName>VCIssuer</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Verifiable Credentials iss</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <!-- Unique id for the Verified ID card -->
      <ClaimType Id="VCKey">
        <DisplayName>VCKey</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Verifiable Credentials key</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <!-- When FaceCheck is used in MFA, this claim has the confidence score -->
      <ClaimType Id="VCMatchConfidenceScore">
        <DisplayName>VCMatchConfidenceScore</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>FaceCheck matchConfidenceScore</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>      
      <!-- VCKey persisted as a signInName (identities in MS Grap API)-->
      <ClaimType Id="signInNames.vcid">
        <DisplayName>signInNames.vcid</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <!-- status from UX if we managed to issue a VC or not -->
      <ClaimType Id="VCIssued">
        <DisplayName>VCIssued</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>If we managed to issue a VC</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <ClaimType Id="correlationId">
        <DisplayName>CorrelationId</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>B2C CorrelationId</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <ClaimType Id="IPAddress">
        <DisplayName>IPAddress</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>User's ip address</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
    </ClaimsSchema>

    <!-- 
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Content Definitions (UI)
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <ContentDefinitions>
      <!-- This content definition is to render an error page that displays unhandled errors. -->
      <ContentDefinition Id="api.error">
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:globalexception:1.2.0</DataUri>
      </ContentDefinition>
      <ContentDefinition Id="api.idpselections">
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:providerselection:1.2.0</DataUri>
      </ContentDefinition>
      <ContentDefinition Id="api.idpselections.signup">
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:providerselection:1.2.0</DataUri>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted">
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.0</DataUri>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted.profileupdate">
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.0</DataUri>
      </ContentDefinition>
      <ContentDefinition Id="api.localaccountsignup">
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.0</DataUri>
      </ContentDefinition>
      <ContentDefinition Id="api.localaccountpasswordreset">
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.0</DataUri>
      </ContentDefinition>
      <!-- These two pages uses custom html -->
      <ContentDefinition Id="api.signuporsignin">
        <!-- CHANGE THE BELOW LINES -->
        <LoadUri>https://yourtenant.azurewebsites.net/B2C/unified</LoadUri>
        <!--<LoadUri>https://yourstorageaccount.blob.core.windows.net/uxcust/templates/vc/unified.html</LoadUri>-->
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:unifiedssp:2.1.0</DataUri>
        <!-- added -->
        <LocalizedResourcesReferences MergeBehavior="Prepend">
          <LocalizedResourcesReference Language="en" LocalizedResourcesReferenceId="api.signuporsignin.en" />
        </LocalizedResourcesReferences>
        <!-- added -->
      </ContentDefinition>
      <ContentDefinition Id="api.signuporsignin.quick">
        <!-- CHANGE THE BELOW LINES -->
        <LoadUri>https://yourtenant.azurewebsites.net/B2C/unifiedquick</LoadUri>
        <!--<LoadUri>https://yourstorageaccount.blob.core.windows.net/uxcust/templates/vc/unifiedquick.html</LoadUri>-->
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:unifiedssp:2.1.0</DataUri>
        <!-- added -->
        <LocalizedResourcesReferences MergeBehavior="Prepend">
          <LocalizedResourcesReference Language="en" LocalizedResourcesReferenceId="api.signuporsigninquick.en" />
        </LocalizedResourcesReferences>
        <!-- added -->
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted.vc">
        <!--<LoadUri>https://yourstorageaccount.blob.core.windows.net/uxcust/templates/vc/selfAsserted.html</LoadUri>-->
        <LoadUri>https://yourtenant.azurewebsites.net/B2C/selfAsserted</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Verifiable Credentials Signin</Item>
        </Metadata>
      </ContentDefinition>
    </ContentDefinitions>
    <Localization Enabled="true">
      <SupportedLanguages DefaultLanguage="en" MergeBehavior="ReplaceAll">
        <SupportedLanguage>en</SupportedLanguage>
      </SupportedLanguages>
      <LocalizedResources Id="api.signuporsignin.en">
        <LocalizedStrings>
          <LocalizedString ElementType="UxElement" StringId="local_intro_generic">Sign in to your account</LocalizedString>
          <LocalizedString ElementType="UxElement" StringId="social_intro">Other ways to login</LocalizedString>
        </LocalizedStrings>
      </LocalizedResources>
      <LocalizedResources Id="api.signuporsigninquick.en">
        <LocalizedStrings>
          <LocalizedString ElementType="UxElement" StringId="local_intro_generic">Sign in to your account</LocalizedString>
          <LocalizedString ElementType="UxElement" StringId="social_intro">Sign in with your Verified ID</LocalizedString>
        </LocalizedStrings>
      </LocalizedResources>
    </Localization>
  </BuildingBlocks>
  
  <!-- 
  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  // Claims Providers used in UX
  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <ClaimsProviders>
       
    <ClaimsProvider>
      <DisplayName>Local Account</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="SelfAsserted-LocalAccountSignin-Email-Only">
          <Metadata>
            <Item Key="setting.showSignupLink">false</Item>
            <Item Key="setting.forgotPasswordLinkLocation">None</Item>
          </Metadata>
          <IncludeTechnicalProfile ReferenceId="SelfAsserted-LocalAccountSignin-Email" />
        </TechnicalProfile>
        <TechnicalProfile Id="SelfAsserted-LocalAccountSignin-Email">
          <DisplayName>Local Account Signin</DisplayName>
          <InputClaims>
            <!-- Q&D hack - pass API URL in signInName -->
            <InputClaim ClaimTypeReferenceId="signInName" AlwaysUseDefaultValue="true" DefaultValue="https://yourtenant.azurewebsites.net" />
          </InputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    
    <!-- Claims Provider for Signin via VC UX -->
    <ClaimsProvider>
      <DisplayName>Self Asserted</DisplayName>
      <TechnicalProfiles>
        
        <!-- Signing in with a VC when VC isn't linked to a B2C account -->
        <TechnicalProfile Id="SelfAsserted-VCSigninNoObject">
          <DisplayName>Verified ID</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted.vc</Item>
            <Item Key="setting.showCancelButton">false</Item>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="VCStateId" DefaultValue="{Context:CorrelationId}" AlwaysUseDefaultValue="true" />
            <!-- if you change this one, you need to change the ServiceUrl for the REST API below -->
            <InputClaim ClaimTypeReferenceId="VCServiceUrl" AlwaysUseDefaultValue="true" DefaultValue="https://yourtenant.azurewebsites.net" />
          </InputClaims>
          <DisplayClaims>
            <DisplayClaim ClaimTypeReferenceId="VCStateId" />
            <DisplayClaim ClaimTypeReferenceId="VCServiceUrl" /> 
          </DisplayClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="givenName" />
            <OutputClaim ClaimTypeReferenceId="surName" />
            <OutputClaim ClaimTypeReferenceId="VCCredentialType" />
            <OutputClaim ClaimTypeReferenceId="VCCredentialType" />
            <OutputClaim ClaimTypeReferenceId="VCSubject" />
            <OutputClaim ClaimTypeReferenceId="VCIssuer" />
            <OutputClaim ClaimTypeReferenceId="VCKey" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="email" />
            <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="DID" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="REST-VC-GetAuthResult" />
          </ValidationTechnicalProfiles>
        </TechnicalProfile>
        
        <!-- as above, but requires FaceCheck for MFA -->
        <TechnicalProfile Id="SelfAsserted-VCSigninNoObjectMFA">
          <DisplayName>Verified ID MFA</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted.vc</Item>
            <Item Key="setting.showCancelButton">false</Item>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="VCStateId" DefaultValue="{Context:CorrelationId}" AlwaysUseDefaultValue="true" />
            <!-- if you change this one, you need to change the ServiceUrl for the REST API below -->
            <InputClaim ClaimTypeReferenceId="VCServiceUrl" AlwaysUseDefaultValue="true" DefaultValue="https://yourtenant.azurewebsites.net" />
            <InputClaim ClaimTypeReferenceId="VCFaceCheck" DefaultValue="required" AlwaysUseDefaultValue="true" />
          </InputClaims>
          <DisplayClaims>
            <DisplayClaim ClaimTypeReferenceId="VCStateId" />
            <DisplayClaim ClaimTypeReferenceId="VCServiceUrl" />
            <DisplayClaim ClaimTypeReferenceId="VCFaceCheck" />
          </DisplayClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="givenName" />
            <OutputClaim ClaimTypeReferenceId="surName" />
            <OutputClaim ClaimTypeReferenceId="VCCredentialType" />
            <OutputClaim ClaimTypeReferenceId="VCCredentialType" />
            <OutputClaim ClaimTypeReferenceId="VCSubject" />
            <OutputClaim ClaimTypeReferenceId="VCIssuer" />
            <OutputClaim ClaimTypeReferenceId="VCMatchConfidenceScore" />            
            <OutputClaim ClaimTypeReferenceId="VCKey" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="email" />
            <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="DID" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="REST-VC-GetAuthResult" />
          </ValidationTechnicalProfiles>
        </TechnicalProfile>
        
        <!-- Signing in with a VC when VC references a B2C account -->
        <TechnicalProfile Id="SelfAsserted-VCSignin">
          <DisplayName>Verified ID</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted.vc</Item>
            <Item Key="setting.showCancelButton">false</Item>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="VCStateId" DefaultValue="{Context:CorrelationId}" AlwaysUseDefaultValue="true" />
            <!-- if you change this one, you need to change the ServiceUrl for the REST API below -->
            <InputClaim ClaimTypeReferenceId="VCServiceUrl" AlwaysUseDefaultValue="true" DefaultValue="https://yourtenant.azurewebsites.net" />
          </InputClaims>
          <DisplayClaims>
            <DisplayClaim ClaimTypeReferenceId="VCStateId" />
            <DisplayClaim ClaimTypeReferenceId="VCServiceUrl" />
          </DisplayClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="givenName" />
            <OutputClaim ClaimTypeReferenceId="surName" />
            <OutputClaim ClaimTypeReferenceId="VCCredentialType" />
            <OutputClaim ClaimTypeReferenceId="VCCredentialType" />
            <OutputClaim ClaimTypeReferenceId="VCSubject" />
            <OutputClaim ClaimTypeReferenceId="VCIssuer" />
            <OutputClaim ClaimTypeReferenceId="VCKey" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="email" />
            <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="DID" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="REST-VC-GetAuthResult" />
            <!-- make sure the user exists in the directory -->
            <ValidationTechnicalProfile ReferenceId="AAD-UserReadUsingObjectId" />
          </ValidationTechnicalProfiles>
        </TechnicalProfile>
        
        <!-- Signing in with a VC when VC references a B2C account -->
        <TechnicalProfile Id="SelfAsserted-VCSigninQuick">
          <DisplayName>Verified ID</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted.vc</Item>
            <Item Key="setting.showCancelButton">false</Item>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="VCStateId" DefaultValue="{Context:CorrelationId}" AlwaysUseDefaultValue="true" />
            <InputClaim ClaimTypeReferenceId="VCServiceUrl" AlwaysUseDefaultValue="true" DefaultValue="https://yourtenant.azurewebsites.net" />
          </InputClaims>
          <DisplayClaims>
            <DisplayClaim ClaimTypeReferenceId="VCStateId" />
            <DisplayClaim ClaimTypeReferenceId="VCServiceUrl" />
          </DisplayClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="VCStateId" />
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="givenName" />
            <OutputClaim ClaimTypeReferenceId="surName" />
            <OutputClaim ClaimTypeReferenceId="VCCredentialType" />
            <OutputClaim ClaimTypeReferenceId="VCCredentialType" />
            <OutputClaim ClaimTypeReferenceId="VCSubject" />
            <OutputClaim ClaimTypeReferenceId="VCIssuer" />
            <OutputClaim ClaimTypeReferenceId="VCKey" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="email" />
            <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="DID" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="REST-VC-GetAuthResult" />
            <!-- make sure the user exists in the directory -->
            <ValidationTechnicalProfile ReferenceId="AAD-UserReadUsingObjectId" />
          </ValidationTechnicalProfiles>          
        </TechnicalProfile>
        
        <!-- VC Issuance during B2C Signup -->
        <TechnicalProfile Id="SelfAsserted-VCIssuance">
          <DisplayName>Verified ID</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted.vc</Item>
            <Item Key="setting.showCancelButton">false</Item>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="VCStateId" DefaultValue="{Context:CorrelationId}" AlwaysUseDefaultValue="true" />
            <!-- if you change this one, you need to change the ServiceUrl for the REST API below -->
            <InputClaim ClaimTypeReferenceId="VCServiceUrl" AlwaysUseDefaultValue="true" DefaultValue="https://yourtenant.azurewebsites.net" />
            <InputClaim ClaimTypeReferenceId="VCIssued" DefaultValue="issuance" AlwaysUseDefaultValue="true" />
          </InputClaims>
          <DisplayClaims>
            <DisplayClaim ClaimTypeReferenceId="VCStateId" />
            <DisplayClaim ClaimTypeReferenceId="VCServiceUrl" />
            <DisplayClaim ClaimTypeReferenceId="VCIssued" />
            <!-- success/failure-->
          </DisplayClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="VCIssued" />
          </OutputClaims>
        </TechnicalProfile>
        
      </TechnicalProfiles>
    </ClaimsProvider>

    <!-- 
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // REST API Claims Providers
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <ClaimsProvider>
      <DisplayName>REST API</DisplayName>
      <TechnicalProfiles>
        
        <!-- REST API to deployed app to query the resunt of "presentation_verified" -->
        <TechnicalProfile Id="REST-VC-GetAuthResult">
          <DisplayName>Verifiable Credentials Authentication Result</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://yourtenant.azurewebsites.net/api/verifier/presentation-response-b2c</Item>
            <Item Key="AuthenticationType">ApiKeyHeader</Item>
            <Item Key="SendClaimsIn">Body</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="x-api-key" StorageReferenceId="B2C_1A_RestApiKey" />
          </CryptographicKeys>
          <InputClaims>
            <!-- Key to auth result. Comes from the UX -->
            <InputClaim ClaimTypeReferenceId="VCStateId" PartnerClaimType="id" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="VCCredentialType" PartnerClaimType="vcType" />
            <OutputClaim ClaimTypeReferenceId="VCSubject" PartnerClaimType="vcSub" />
            <OutputClaim ClaimTypeReferenceId="VCIssuer" PartnerClaimType="vcIss" />
            <OutputClaim ClaimTypeReferenceId="VCKey" PartnerClaimType="vcKey" />
            <OutputClaim ClaimTypeReferenceId="VCMatchConfidenceScore" PartnerClaimType="matchConfidenceScore" />            
            <OutputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="oid" />
            <OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="username" />
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="firstName" />
            <OutputClaim ClaimTypeReferenceId="surName" PartnerClaimType="lastName" />
            <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="DID" AlwaysUseDefaultValue="true" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <!-- REST API used for Issuance inside the User Journey. Then B2C policy needs to push the claims to the deploed app [Not ideal solution] -->
        <TechnicalProfile Id="REST-VC-PostIssuanceClaims">
          <DisplayName>Verifiable Credentials Authentication Result</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://yourtenant.azurewebsites.net/api/issuer/issuance-claims-b2c</Item>
            <Item Key="AuthenticationType">ApiKeyHeader</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="x-api-key" StorageReferenceId="B2C_1A_RestApiKey" />
          </CryptographicKeys>
          <InputClaims>
            <!--                
            This list must cover what claims we expect to have in the issued VC.
            What happens later is that the selfAsserted UX in a subsequent step calls the VC sample REST API to               
            create an issuance request and specifies the B2C correlationId. The VC sample can then retrieve the               
            cached claims (and validate the calls comes from the same client - hence the IPAddress). The user               
            scans the QR code with the Authenticator and gets a VC card for the B2C user.              
            -->
            <InputClaim ClaimTypeReferenceId="correlationId" PartnerClaimType="id" DefaultValue="{Context:CorrelationId}" AlwaysUseDefaultValue="true" />
            <InputClaim ClaimTypeReferenceId="IPAddress" DefaultValue="{Context:IPAddress}" AlwaysUseDefaultValue="true" />
            <InputClaim ClaimTypeReferenceId="tenantId" PartnerClaimType="tid" DefaultValue="{Policy:TenantObjectId}" AlwaysUseDefaultValue="true" />
            <InputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="oid" />
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="username" />
            <InputClaim ClaimTypeReferenceId="displayName" />
            <InputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="firstName" />
            <InputClaim ClaimTypeReferenceId="surName" PartnerClaimType="lastName" />
          </InputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>
        
      </TechnicalProfiles>
    </ClaimsProvider>
    
  </ClaimsProviders>
</TrustFrameworkPolicy>
